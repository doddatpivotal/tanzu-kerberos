
#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")
#@ load("@ytt:yaml", "yaml")

#! This function returns a template to be used for configuring references to the KDC.  It will later be 
#! processed by YTT and customized with data from your params.yaml file.
#@ def realm_config():
realm_config: |+
  [realms]
  REALM = {
    kdc = kdc.kdc:88
    admin_server = kdc.kdc:749
    kpasswd_server = kdc.kdc:464
  }

#@ end

#! This function performs the requisite text substitutions and key substitions for your realm.
#@ def realm_config_yaml(realm):
#@ return {realm + '.conf': realm_config()["realm_config"].replace("REALM",realm)}
#@ end

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: krb5-realm-info
data:
  _: #@ template.replace(realm_config_yaml(data.values.kdc.realm))
---
apiVersion: v1
kind: Secret
metadata:
  name: keytab
data:  
  client.keytab: #@ data.values.kdc.user_keytab
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: krb5-conf
data:
  krb5.conf: |+
    includedir /etc/krb5.conf.d/
    
    [logging]
    default = STDERR

    [libdefaults]
    default_ccache_name=FILE:/dev/shm/ccache
    default_client_keytab_name=/krb5/client.keytab
    default_keytab_name=/krb5/krb5.keytab
    ignore_acceptor_hostname = true
    rdns = false

